type Artist @model {
  id: ID!
  name: String!
  contests: [Contest] @connection(keyName: "byArtist", fields: ["id"])
}

type Contest @model @key(name: "byArtist", fields: ["artistID", "headline"]) {
  id: ID!
  headline: String!
  description: String
  landingButtonText: String!
  deadline: String
  artistID: ID!
  artist: Artist @connection(fields: ["artistID"])
  actions: [ContestAction] @connection(keyName: "byContest", fields: ["id"])
  picture: Picture
}

type ContestAction
  @model
  @key(name: "byContest", fields: ["contestID", "content"]) {
  id: ID!
  content: String!
  pointValue: Int
  contestID: ID!
  contest: Contest @connection(fields: ["contestID"])
  enduserActions: [EnduserActions]
    @connection(keyName: "byAction", fields: ["id"])
  actionType: ActionType
  url: String!
}

type ActionType @model {
  id: ID!
  value: String
}

type Enduser @model {
  id: ID!
  username: String!
  actions: [EnduserActions] @connection(keyName: "byEnduser", fields: ["id"])
}

type EnduserActions
  @model
  @key(name: "byAction", fields: ["actionID"])
  @key(name: "byEnduser", fields: ["enduserID"]) {
  enduserID: ID!
  enduser: Enduser!
  actionID: ID!
  action: ContestAction!
  createdAt: String
}

type Picture @model {
  id: ID!
  name: String
  owner: String
  visibility: Visibility
  createdAt: String
  file: S3Object
}

type S3Object {
  bucket: String!
  region: String!
  key: String!
}

enum Visibility {
  public
  private
}
